name: Build and Release Docker Image

on:
  schedule:
    - cron: '0 */6 * * *'  # 每 6 小时执行一次
  workflow_dispatch:  # 手动触发支持

jobs:
  bt-product-release:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出当前仓库代码
    - name: Checkout the repository
      uses: actions/checkout@v2

    # 2. 获取已处理的版本号
    - name: Get Processed Version
      id: get-processed-version
      run: |
        if [ -f processed_version.txt ]; then
          processed_version=$(cat processed_version.txt)
        else
          processed_version="none"
        fi
        echo "Processed version: $processed_version"
        echo "processed_version=$processed_version" >> $GITHUB_ENV

    # 3. 获取 zhenxun_bot 最新发布版本号
    - name: Get Latest Release Version of zhenxun_bot
      id: get-latest-version
      run: |
        latest_release=$(curl -s https://api.github.com/repos/HibiKier/zhenxun_bot/releases/latest | jq -r .tag_name)
        echo "Latest release version is $latest_release"
        echo "latest_version=$latest_release" >> $GITHUB_ENV

    # 4. 比较版本号
    - name: Check if New Version Exists
      id: version-check
      run: |
        if [ "${{ env.latest_version }}" != "${{ env.processed_version }}" ]; then
          echo "New version found: ${{ env.latest_version }}"
          echo "new_version=true" >> $GITHUB_ENV
          echo "::set-output name=new_version::true"
        else
          echo "No new version."
          echo "new_version=false" >> $GITHUB_ENV
          echo "::set-output name=new_version::false"
        fi

    # 5. 克隆 zhenxun_bot 仓库
    - name: Clone zhenxun_bot Repository
      if: steps.version-check.outputs.new_version == 'true'
      run: |
        git clone --branch ${{ env.latest_version }} https://$GH_TOKEN@github.com/HibiKier/zhenxun_bot.git /tmp/zhenxun_bot

    # 6. 克隆 zhenxun_bot_docker 仓库
    - name: Clone zhenxun_bot_docker Repository
      if: steps.version-check.outputs.new_version == 'true'
      run: |
        git clone https://$GH_TOKEN@github.com/HibiKier/zhenxun_bot_docker.git /tmp/zhenxun_bot_docker

    # 7. 复制 zhenxun_bot_docker 中的文件到 zhenxun_bot 中
    - name: Copy files from zhenxun_bot_docker to zhenxun_bot
      if: steps.version-check.outputs.new_version == 'true'
      run: |
        mkdir -p /tmp/zhenxun_bot/zhenxun/
        cp -r /tmp/zhenxun_bot_docker/* /tmp/zhenxun_bot/zhenxun/

    # 8. 登录到阿里云容器镜像服务并构建镜像
    - name: Build and Push Docker Image
      if: steps.version-check.outputs.new_version == 'true'
      run: |
        docker login -u "${{ secrets.REGISTRY_USERNAME }}" -p "${{ secrets.REGISTRY_PASSWORD }}" registry.cn-hangzhou.aliyuncs.com
        cd /tmp/zhenxun_bot
        docker build -t registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }} .
        docker tag registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }} registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:latest
        docker push registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }}
        docker push registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:latest

    # 9. 保存处理后的版本号
    - name: Save Processed Version
      if: steps.version-check.outputs.new_version == 'true'
      run: |
        echo "${{ env.latest_version }}" > processed_version.txt
