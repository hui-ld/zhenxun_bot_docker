name: Build and Release Docker Image

on:
  schedule:
    - cron: '0 0 1 * *'  # 每月的第一天执行一次
  workflow_dispatch:  # 手动触发支持

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    # 检出当前仓库代码
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Clone zhenxun_bot_docker Repository
      run: |
        git clone https://${{ secrets.GH_TOKEN }}@github.com/hui-ld/zhenxun_bot_docker.git /tmp/zhenxun_bot_docker
    
    - name: Clone zhenxun_bot Repository
      run: |
        git clone --branch ${{ env.latest_version }} https://github.com/HibiKier/zhenxun_bot.git /tmp/zhenxun_bot
    
    # 获取已处理的版本号
    - name: Get Processed Version
      id: get-processed-version
      run: |
        processed_version=$(cat /tmp/zhenxun_bot_docker/processed_version.txt 2>/dev/null || echo "none")
        echo "Processed version: $processed_version"
        echo "processed_version=$processed_version" >> $GITHUB_ENV

    # 获取 zhenxun_bot 最新发布版本号
    - name: Get Latest Release Version
      id: get-latest-version
      run: |
        latest_release=$(curl -s https://api.github.com/repos/HibiKier/zhenxun_bot/releases/latest | jq -r .tag_name)
        echo "Latest release version: $latest_release"
        echo "latest_version=$latest_release" >> $GITHUB_ENV

    # 判断是否存在新版本
    - name: Check New Version
      run: |
        if [ "${{ env.latest_version }}" != "${{ env.processed_version }}" ]; then
          echo "New version found: ${{ env.latest_version }}"
          echo "new_version=true" >> $GITHUB_ENV
        else
          echo "No new version."
          echo "new_version=false" >> $GITHUB_ENV

    # 克隆仓库并处理新版本
    - name: Handle New Version
      if: env.new_version == 'true'
      run: |
        cp -r /tmp/zhenxun_bot_docker/* /tmp/zhenxun_bot/
        echo "${{ env.latest_version }}" > /tmp/zhenxun_bot_docker/processed_version.txt
        cd /tmp/zhenxun_bot_docker
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add processed_version.txt
        git commit -m "Update processed_version.txt to ${{ env.latest_version }}"
        git push

    # 构建并推送 Docker 镜像
    - name: Build and Push Docker Image
      if: env.new_version == 'true'
      run: |
        docker login -u "${{ secrets.REGISTRY_USERNAME }}" -p "${{ secrets.REGISTRY_PASSWORD }}" registry.cn-hangzhou.aliyuncs.com
        cd /tmp/zhenxun_bot
        docker build -t registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }} . 
        docker tag registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }} registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:latest
        docker push registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:${{ env.latest_version }}
        docker push registry.cn-hangzhou.aliyuncs.com/starfishes/zhenxun-docker:latest

    # 无新版本时的提示
    - name: No New Version
      if: env.new_version != 'true'
      run: echo "No new version detected. Workflow completed."
